// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

////////////////////////////////////////////////////
// AUTOGENERATED - DO NOT EDIT THIS FILE DIRECTLY //
////////////////////////////////////////////////////

import "forge-std/Script.sol";
import {Vm} from "forge-std/Vm.sol";

import "src/pockets/DefaultPocket.sol";
import "src/Vault.sol";
import {TCAPTargetOracle} from "src/oracle/TCAPTargetOracle.sol";
import {AggregatorV3Interface} from "@chainlink/interfaces/feeds/AggregatorV3Interface.sol";
import {Roles} from "src/lib/Constants.sol";
import {TCAPV2, ITCAPV2} from "src/TCAPV2.sol";
import {AggregatorInterfaceTCAP} from "script/mocks/AggregateInterfaceTCAP.sol";



abstract contract SetupSystem is Script {

    function setupSystem() internal {
        vm.startBroadcast(vm.envUint("PRIVATE_KEY"));
        address admin = vm.addr(vm.envUint("PRIVATE_KEY"));
        address usdcAddress = vm.getDeployment("USDC");
        address vaultAddress = vm.getDeployment("Vault");
        address tcapV2Address = vm.getDeployment("TCAPV2");
        address defaultPocketAddress = vm.getDeployment("DefaultPocket");
        address tcapOracle = vm.getDeployment("TCAPTargetOracle");
        TCAPV2 tcapV2 = TCAPV2(tcapV2Address);
        Vault vault = Vault(vaultAddress);
        tcapV2.grantRole(Roles.ORACLE_SETTER_ROLE, admin);
        tcapV2.setOracle(tcapOracle);
        tcapV2.grantRole(Roles.VAULT_ROLE, vaultAddress);
        vault.grantRole(Roles.POCKET_SETTER_ROLE, admin);
        vault.grantRole(Roles.FEE_SETTER_ROLE, admin);
        vault.grantRole(Roles.ORACLE_SETTER_ROLE, admin);
        vault.grantRole(Roles.LIQUIDATION_SETTER_ROLE, admin);
        vault.addPocket(IPocket(defaultPocketAddress));
        console.log("============deployed addresses===========");
        console.log("admin", admin);
        console.log("TCAP", tcapV2Address);
        console.log("USDC", usdcAddress);
        console.log("usdc vault", vaultAddress);
        console.log("default pocket", defaultPocketAddress);
        console.log("TCAP Oracle", tcapOracle);
        console.log("==================end====================");
        vm.stopBroadcast();
    }
}
